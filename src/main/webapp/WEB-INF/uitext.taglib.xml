<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facelettaglibrary_2_2.xsd"
	version="2.2"
>
	<namespace>http://uitext.se/ui</namespace>
	<short-name>fu</short-name>
	<composite-library-name>components</composite-library-name> <!-- NOTE: Om innehåller i det här elementet ändras så måste även ResourceHandlerImplPatch ändras. -->

	<tag>
		<description>Renders a development-only div.</description>
		<tag-name>dev</tag-name>
		<source>tags/dev.xhtml</source>
	</tag>

	<tag>
		<description>Lägger in en fa-info-circle icon och kopplar ett primefaces tooltip till denna ikon.</description>
		<tag-name>tooltip</tag-name>
		<source>tags/tooltip.xhtml</source>
		<attribute>
			<description>Nyckeln för hämtning av text från resource bundle.</description>
			<name>textKey</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Position för tooltiprutan. Välj på top, bottom, left, right. Default är top.</description>
			<name>position</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Storlek på infosymbolen. Default är 1 em, dvs samma storlek som aktuell font. Du kan ange size i em px % etc, men em är att föredra.</description>
			<name>size</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	
	<tag>
		<description>Lägger in en fa-info-circle icon och kopplar ett primefaces tooltip till denna ikon.</description>
		<tag-name>contentHeader</tag-name>
		<source>tags/contentHeader.xhtml</source>
		<attribute>
			<description>Nyckeln för hämtning av text från resource bundle.</description>
			<name>textKey</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Position för tooltiprutan. Välj på top, bottom, left, right. Default är top.</description>
			<name>activeStatusIndex</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>Nyckeln för hämtning av text från resource bundle.</description>
			<name>ttTextKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	
	<tag>
		<description>Lägger in en fa-info-circle icon och kopplar ett primefaces tooltip till denna ikon.</description>
		<tag-name>infobox</tag-name>
		<source>tags/infobox.xhtml</source>
		<attribute>
			<description>Anger om ett menyalternativ ska renderas eller ej. Funkar som rendered brukar funka.</description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Nyckeln för hämtning av text från resource bundle.</description>
			<name>highlight</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Position för tooltiprutan. Välj på top, bottom, left, right. Default är top.</description>
			<name>text</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Storlek på infosymbolen. Default är 1 em, dvs samma storlek som aktuell font. Du kan ange size i em px % etc, men em är att föredra.</description>
			<name>icon</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Storlek på infosymbolen. Default är 1 em, dvs samma storlek som aktuell font. Du kan ange size i em px % etc, men em är att föredra.</description>
			<name>outcome</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Storlek på infosymbolen. Default är 1 em, dvs samma storlek som aktuell font. Du kan ange size i em px % etc, men em är att föredra.</description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Storlek på infosymbolen. Default är 1 em, dvs samma storlek som aktuell font. Du kan ange size i em px % etc, men em är att föredra.</description>
			<name>style</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	
	<tag>
		<description>Lägger in en fa-info-circle icon och kopplar ett primefaces tooltip till denna ikon.</description>
		<tag-name>outputEntry</tag-name>
		<source>tags/outputEntry.xhtml</source>
		<attribute>
			<description>Anger om ett menyalternativ ska renderas eller ej. Funkar som rendered brukar funka.</description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>
			</description>
			<name>label</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Text på menyposten (gäller både direktlänk och submeny).</description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description>Nyckeln för hämtning av text från resource bundle.</description>
			<name>ttTextKey</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Position för tooltiprutan. Välj på top, bottom, left, right. Default är top.</description>
			<name>ttPosition</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Storlek på infosymbolen. Default är 1 em, dvs samma storlek som aktuell font. Du kan ange size i em px % etc, men em är att föredra.</description>
			<name>ttSize</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	
	<tag>
		<description>Om ui-texter är i redigeringsläge så visas en klickbar länk, som vid klick öppnar en dialogruta för ändring av ui-text.</description>
		<tag-name>uitext</tag-name>
		<source>tags/uitext.xhtml</source>
		<attribute>
			<description>Nyckeln för hämtning av text från resource bundle.</description>
			<name>textKey</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Gäller span-tagen som omsluter texten.</description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	
	<tag>
		<description>Representerar en meny i systemet. Omsluter menuitems.</description>
		<tag-name>menu</tag-name>
		<source>tags/menu.xhtml</source>
		<attribute>
			<description>Styleclass för menykontainern.</description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>

	<tag>
		<description>Menyrad i en meny. Består av direkta länkar eller undermenyer (som i sin tur kan innehålla direkta länkar och eller undermenyer). Måste omslutas av en menu-tag.</description>
		<tag-name>menuitem</tag-name>
		<source>tags/menuitem.xhtml</source>
		<attribute>
			<description>Anger om ett menyalternativ ska renderas eller ej. Funkar som rendered brukar funka.</description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>
				Destination för klicket. Tre alternativ för värdet på outcome:
				
				* text - för att användas i outcome i en h:link
				* # - för att skapa en undermeny.
				* tomt (utelämna outcome attributet) - för att skapa en dummylänk som varken är en undermeny eller en vidarelänk.
			</description>
			<name>outcome</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Text på menyposten (gäller både direktlänk och submeny).</description>
			<name>text</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>fa-ikonen som ska användas framför menytexten.</description>
			<name>icon</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>

	<tag>
		<description>
			Renderar en länk; antingen en vanlig anchor tag med href satt till # eller en h:link.
			Vilket det blir beror på om path är satt eller ej (om path är satt så renderas en h:link).
	
			Styling finns för använding i topbaren. Generell styling saknas för tillfället.
		</description>
		<tag-name>link</tag-name>
		<source>tags/link.xhtml</source>
		<attribute>
			<description>Id för länken.</description>
			<name>id</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Anger om en länk ska visas eller ej. Funkar som rendered brukar funka.</description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Länken att navigera till. Om den lämnas tom kommer den att renderas som #. Renderas i övrigt som h:link.</description>
			<name>path</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Namnet på länken.</description>
			<name>text</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>fa-icon-representation</description>
			<name>icon</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Stil-klass på länk-elementet.</description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Badge.</description>
			<name>badgeValue</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>

	<tag>
		<description>Renders a a form which always submits to exact request URI.</description>
		<tag-name>form</tag-name>
		<source>tags/form.xhtml</source>
		<attribute>
			<description>The ID of the form.</description>
			<name>id</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Whether the form represents a fieldset. Defaults to true.</description>
			<name>fieldset</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Whether the form is stateless. Defaults to whether user is not logged in. Note that setting to true affects the entire view.</description>
			<name>stateless</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
	</tag>

	<tag>
		<description>
			<![CDATA[
				Renders an input field with label and message list.
				This must be placed in k:form fieldset=true.
				The markup is like below:
				<pre>
&lt;div id="id_f" class="field {type} {severity}"&gt;
    &lt;label id="id_l" /&gt;
    &lt;input id="id" widgetVar="id_w" /&gt;
    &lt;ul id="id_m" class="messages" /&gt;
&lt;/div&gt;
				</pre>
			]]>
		</description>
		<tag-name>input</tag-name>
		<source>tags/input.xhtml</source>

		<!-- Field -->
		<attribute>
			<description>
				<![CDATA[
					The ID of the input field, this usually represents the property name.
					This is set as ID the <code>&lt;input&gt;</code> element itself and used as general key for label.
					The <code>&lt;div&gt;</code> element representing the whole field will get the same ID suffixed with "_f".
					The <code>&lt;label&gt;</code> element representing the label will get the same ID suffixed with "_l".
					The <code>&lt;ul&gt;</code> element representing the message list will get the same ID suffixed with "_m".
					The PrimeFaces widgetVar value will be the same ID suffixed with "_w".
					There are seven named inserts which you can define via ui:define: beforeLabel, label, insideLabel, beforeInput, input, beforeMessages and messages.
					The default insert ends up inside input.
				]]>
			</description>
			<name>id</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[Whether to render HTML output or not. Defaults to true. Under the covers, this actually uses <code>&lt;c:if&gt;</code> instead of <code>rendered</code>, so it should save unnecessary bean initialization.]]></description>
			<name>rendered</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description><![CDATA[The style class of the field. This is applied on the <code>&lt;div&gt;</code> element representing the whole field.]]></description>
			<name>styleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The style class of the label of the field. This is applied on the <code>&lt;label&gt;</code> element representing the label.]]></description>
			<name>labelStyleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The style class of the input field itself. This is applied on the <code>&lt;input&gt;</code> element itself.]]></description>
			<name>inputStyleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description><![CDATA[The style class of the message list of the field. This is applied on the <code>&lt;ul&gt;</code> element representing the message list.]]></description>
			<name>messagesStyleClass</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>

		<!-- Label -->
		<attribute>
			<description>The label of the field. Defaults to #{i18n['general.' += id]}.</description>
			<name>label</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>The tooltip of the label of the field.</description>
			<name>tooltip</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>

		<!-- Input -->
		<attribute>
			<description>
				The type of the input field. Special types are a.o. 'menu', 'checkbox', 'number', 'autocomplete', 'password' and 'custom'.
				Other types are interpreted as HTML5 input type. Defaults to 'text'.
			</description>
			<name>type</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>The value of the input field.</description>
			<name>value</name>
			<required>true</required>
			<type>java.lang.Object</type>
		</attribute>
		<attribute>
			<description>Whether the input field is required. Defaults to false. Only use this setting for conditionally required fields or checkboxes; normally @NotNull must be used.</description>
			<name>required</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Whether the input field supports client side autocomplete. Defaults to true.</description>
			<name>autocomplete</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>The maximum length of the input field. This must be a positive number. Defaults to 255.</description>
			<name>maxlength</name>
			<required>false</required>
			<type>java.lang.Integer</type>
		</attribute>
		<attribute>
			<description>The p:autoComplete method in case type attribute is set to 'autocomplete'.</description>
			<name>completeMethod</name>
			<required>false</required>
			<type>javax.el.MethodExpression</type>
		</attribute>
		
		<!-- Messages -->
		<attribute>
			<description>Whether to HTML-escape the message list. Defaults to true.</description>
			<name>escapeMessages</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
	</tag>
	
	<tag>
		<description>Renders a field for buttons. This must be placed in k:form fieldset=true.</description>
		<tag-name>buttons</tag-name>
		<source>tags/buttons.xhtml</source>
	</tag>

	<tag>
		<description>Renders a button which can act as either navigation button or submit button. This must be placed in k:buttons.</description>
		<tag-name>button</tag-name>
		<source>tags/button.xhtml</source>
		<attribute>
			<description>The ID of the submit button.</description>
			<name>id</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>The value of the button. Defaults to #{i18n['general.' += id]}.</description>
			<name>value</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>The GET path of page to navigate, WITHOUT leading slash and extension.</description>
			<name>path</name>
			<required>false</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>The POST action method of the button. This is ignored when 'path' attribute is specified.</description>
			<name>action</name>
			<required>false</required>
			<type>javax.el.MethodExpression</type>
		</attribute>
		<attribute>
			<description>Whether or not to use ajax. Defaults to true. Applies only when 'action' is specified.</description>
			<name>ajax</name>
			<required>false</required>
			<type>boolean</type>
		</attribute>
	</tag>

	<tag>
		<description>Renders a table based on PagedDataModel. Each item is available by #{item}.</description>
		<tag-name>table</tag-name>
		<source>tags/table.xhtml</source>
		<attribute>
			<description>The ID of the table.</description>
			<name>id</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Data model must be an instance of PagedDataModel.</description>
			<name>value</name>
			<required>true</required>
			<type>org.example.kickoff.view.PagedDataModel</type>
		</attribute>
	</tag>

	<tag>
		<description>Renders a table column for a specific field. By default nowrap/ellipsis.</description>
		<tag-name>column</tag-name>
		<source>tags/column.xhtml</source>
		<attribute>
			<description>The field (property) name of the #{item} representing the column value. By default, this is also used in id, field, sortBy and filterBy of p:column.</description>
			<name>field</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>

</facelet-taglib>